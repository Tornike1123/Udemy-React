{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/Udemy-React/10.Forms/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsValid, setEnteredNameisValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameToueched] = useState(false);\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n    if (enteredName.trim() === \"\") {\n      setEnteredNameisValid(false);\n      return;\n    }\n  };\n  const nameInputBlur = () => {\n    setEnteredNameToueched(true);\n    if (enteredName.trim() === \"\") {\n      setEnteredNameisValid(false);\n      return;\n    }\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameToueched(true);\n    if (enteredName.trim() === \"\") {\n      setEnteredNameisValid(false);\n      return;\n    }\n    setEnteredNameisValid(true);\n    console.log(enteredName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n\n    // nameInputRef.current.value = \"\"; =>  useRed for update value is not ideal -  it is working, but it manipulates directly to the DOM\n    setEnteredName(\"\");\n  };\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = nameInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onBlur: nameInputBlur,\n        onChange: nameInputChangeHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must be to Empty!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n};\n_s(SimpleInput, \"vlLWawm8iraWaBPTWy8iQpyjpO4=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useRef","useState","SimpleInput","props","nameInputRef","enteredName","setEnteredName","enteredNameIsValid","setEnteredNameisValid","enteredNameTouched","setEnteredNameToueched","nameInputChangeHandler","event","target","value","trim","nameInputBlur","formSubmissionHandler","preventDefault","console","log","enteredValue","current","nameInputIsInvalid","nameInputClasses"],"sources":["/Users/macbook/Documents/Udemy-React/10.Forms/src/components/SimpleInput.js"],"sourcesContent":["import { useRef, useState } from \"react\";\n\nconst SimpleInput = (props) => {\n\tconst nameInputRef = useRef();\n\tconst [enteredName, setEnteredName] = useState(\"\");\n\tconst [enteredNameIsValid, setEnteredNameisValid] = useState(false);\n\tconst [enteredNameTouched, setEnteredNameToueched] = useState(false);\n\n\tconst nameInputChangeHandler = (event) => {\n\t\tsetEnteredName(event.target.value);\n\t\tif (enteredName.trim() === \"\") {\n\t\t\tsetEnteredNameisValid(false);\n\t\t\treturn;\n\t\t}\n\t};\n\n\tconst nameInputBlur = () => {\n\t\tsetEnteredNameToueched(true);\n\t\tif (enteredName.trim() === \"\") {\n\t\t\tsetEnteredNameisValid(false);\n\t\t\treturn;\n\t\t}\n\t};\n\n\tconst formSubmissionHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tsetEnteredNameToueched(true);\n\n\t\tif (enteredName.trim() === \"\") {\n\t\t\tsetEnteredNameisValid(false);\n\t\t\treturn;\n\t\t}\n\n\t\tsetEnteredNameisValid(true);\n\n\t\tconsole.log(enteredName);\n\t\tconst enteredValue = nameInputRef.current.value;\n\t\tconsole.log(enteredValue);\n\n\t\t// nameInputRef.current.value = \"\"; =>  useRed for update value is not ideal -  it is working, but it manipulates directly to the DOM\n\t\tsetEnteredName(\"\");\n\t};\n\n\tconst nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n\tconst nameInputClasses = nameInputIsInvalid\n\t\t? \"form-control invalid\"\n\t\t: \"form-control\";\n\n\treturn (\n\t\t<form onSubmit={formSubmissionHandler}>\n\t\t\t<div className={nameInputClasses}>\n\t\t\t\t<label htmlFor=\"name\">Your Name</label>\n\t\t\t\t<input\n\t\t\t\t\tref={nameInputRef}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tid=\"name\"\n\t\t\t\t\tonBlur={nameInputBlur}\n\t\t\t\t\tonChange={nameInputChangeHandler}\n\t\t\t\t\tvalue={enteredName}\n\t\t\t\t/>\n\t\t\t\t{nameInputIsInvalid && (\n\t\t\t\t\t<p className=\"error-text\">Name must be to Empty!</p>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className=\"form-actions\">\n\t\t\t\t<button>Submit</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAEzC,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAA;EAC9B,MAAMC,YAAY,GAAGJ,MAAM,EAAE;EAC7B,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACM,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACQ,kBAAkB,EAAEC,sBAAsB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEpE,MAAMU,sBAAsB,GAAIC,KAAK,IAAK;IACzCN,cAAc,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAClC,IAAIT,WAAW,CAACU,IAAI,EAAE,KAAK,EAAE,EAAE;MAC9BP,qBAAqB,CAAC,KAAK,CAAC;MAC5B;IACD;EACD,CAAC;EAED,MAAMQ,aAAa,GAAG,MAAM;IAC3BN,sBAAsB,CAAC,IAAI,CAAC;IAC5B,IAAIL,WAAW,CAACU,IAAI,EAAE,KAAK,EAAE,EAAE;MAC9BP,qBAAqB,CAAC,KAAK,CAAC;MAC5B;IACD;EACD,CAAC;EAED,MAAMS,qBAAqB,GAAIL,KAAK,IAAK;IACxCA,KAAK,CAACM,cAAc,EAAE;IACtBR,sBAAsB,CAAC,IAAI,CAAC;IAE5B,IAAIL,WAAW,CAACU,IAAI,EAAE,KAAK,EAAE,EAAE;MAC9BP,qBAAqB,CAAC,KAAK,CAAC;MAC5B;IACD;IAEAA,qBAAqB,CAAC,IAAI,CAAC;IAE3BW,OAAO,CAACC,GAAG,CAACf,WAAW,CAAC;IACxB,MAAMgB,YAAY,GAAGjB,YAAY,CAACkB,OAAO,CAACR,KAAK;IAC/CK,OAAO,CAACC,GAAG,CAACC,YAAY,CAAC;;IAEzB;IACAf,cAAc,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,MAAMiB,kBAAkB,GAAG,CAAChB,kBAAkB,IAAIE,kBAAkB;EAEpE,MAAMe,gBAAgB,GAAGD,kBAAkB,GACxC,sBAAsB,GACtB,cAAc;EAEjB,oBACC;IAAM,QAAQ,EAAEN,qBAAsB;IAAA,wBACrC;MAAK,SAAS,EAAEO,gBAAiB;MAAA,wBAChC;QAAO,OAAO,EAAC,MAAM;QAAA,UAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAQ,eACvC;QACC,GAAG,EAAEpB,YAAa;QAClB,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,MAAM;QACT,MAAM,EAAEY,aAAc;QACtB,QAAQ,EAAEL,sBAAuB;QACjC,KAAK,EAAEN;MAAY;QAAA;QAAA;QAAA;MAAA,QAClB,EACDkB,kBAAkB,iBAClB;QAAG,SAAS,EAAC,YAAY;QAAA,UAAC;MAAsB;QAAA;QAAA;QAAA;MAAA,QAChD;IAAA;MAAA;MAAA;MAAA;IAAA,QACI,eACN;MAAK,SAAS,EAAC,cAAc;MAAA,uBAC5B;QAAA,UAAQ;MAAM;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QAClB;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAET,CAAC;AAAC,GApEIrB,WAAW;AAAA,KAAXA,WAAW;AAsEjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}